Java多线程实现方式主要有四种：继承Thread类、实现Runnable接口、实现Callable接口通过FutureTask包装器来创建Thread线程、使用ExecutorService、Callable、Future实现有返回结果的多线程。



1.B2.D3.C4.A5.C6.C7.A8.A9.C



Topology:计算拓扑，即一个应用程序app（通过storm jar发布），因为各个组件间的消息流动形成逻辑上的一个拓扑结构，因此得名。    TopologyBuilder是拓扑构建器，将spout、bolt等组合起来spout：消息流的源头，消息生产者。bolt：消息处理者Reliability：可靠性，storm保证每个tuple都会被处理。task：任务，每个spout和bolt都是一个任务，每个任务默认是一个线程。worker：工作进程，每个工作进程都有多个taskValues：数据容器Tuple  英[tʌpl]：一个消息传递的基本单元，发送的数据封装到tuple中，实际就是一个value list        JStorm将流中数据抽象为tuple，一个tuple就是一个值列表value list，list中的每个value都有一个name，并且该value可以是基本类型，字符类型，字节数组等，当然也可以是其他可序列化的类型。Stream：消息流，源源不断的tuple组成了streamstream grouping：消息分发策略，一共6种，定义每个bolt接收什么样的消息。Cofig：设置一些配置信息StormSubmitter/LocalCluster拓扑提交器tuple在传输过程中需要序列化和反序列化http://www.51studyit.com/html/notes/20140329/44.htmlspout从外部数据源读取tuple，emit到topology里spout分可靠的和非可靠的两种，对可靠的，还支持ack和fail方法Storm Topology是基于Thrift结构, 并且Nimbus是个Thrift server, 所以对于Topology可以用任何语言实现, 最终都是转化为Thrift结构重要的是, nimbus和supervisor的fail或restart不会影响worker的工作




Hive的meta数据支持以下三种存储方式



一、本地derby 

这种方式是最简单的存储方式，只需要在hive-site.xml做如下配置便可



二、本地mysql 



这种存储方式需要在本地运行一个mysql服务器，并作如下配置（下面两种使用mysql的方式，需要将mysql的jar包拷贝到$HIVE_HOME/lib目录下）。



三、远端mysql 



这种存储方式需要在远端服务器运行一个mysql服务器，并且需要在Hive服务器启动meta服务。 



这里用mysql的测试服务器，ip位192.168.1.214，新建hive_remote数据库，字符集位latine1










